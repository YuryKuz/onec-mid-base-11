
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// *****
	// Kuznetsov: Отрисовка новых элементов формы
		
	ПолеКонтактноеЛицо = Элементы.Добавить("ЮК_КонтактноеЛицо", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	ПолеКонтактноеЛицо.Вид = ВидПоляФормы.ПолеВвода;
	ПолеКонтактноеЛицо.ПутьКДанным = "Объект.ЮК_КонтактноеЛицо";
	
	ГруппаСкидка = Элементы.Добавить("ГруппаСкидка", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);
	ГруппаСкидка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	
	ПолеСогласованнаяСкидка = Элементы.Добавить("ЮК_СогласованнаяСкидка", Тип("ПолеФормы"), ГруппаСкидка);
	ПолеСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
	ПолеСогласованнаяСкидка.ПутьКДанным = "Объект.ЮК_СогласованнаяСкидка";
	ПолеСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "ЮК_СогласованнаяСкидкаПриИзменении");
	
	КомандаПересчитатьТаблицу = Команды.Добавить("ПересчитатьТаблицу");
	КомандаПересчитатьТаблицу.Заголовок = "Пересчитать таблицу";
	КомандаПересчитатьТаблицу.Действие = "ЮК_ПересчитатьТаблицу";
		
	КнопкаПересчитатьТаблицу = Элементы.Добавить("КнопкаПересчитатьТаблицу", Тип("КнопкаФормы"), ГруппаСкидка);
	КнопкаПересчитатьТаблицу.ИмяКоманды = "ПересчитатьТаблицу";
	КнопкаПересчитатьТаблицу.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаПересчитатьТаблицу.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КнопкаПересчитатьТаблицу.Картинка = БиблиотекаКартинок.Обновить;
	
	
	// *****
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ЮК_СогласованнаяСкидкаПриИзменении(Элемент)
	// *****
	// Kuznetsov: Применение скидки при изменении элемента	
	ЮК_СогласованиеСкидки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЮК_ПересчитатьТаблицу(Команда)
	// *****
	// Kuznetsov: Действе при нажатии на кнопку
	ЮК_ПересчитатьТаблицуСУчетомСкидки();
	
КонецПроцедуры



&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЮК_СогласованиеСкидки()
	// *****
	// Kuznetsov: Применение скидки
	ТекДанныеТовары = Элементы.Товары.ТекущиеДанные;
	ТекДанныеУслуги = Элементы.Услуги.ТекущиеДанные;
	
	Если ТекДанныеТовары = Неопределено И ТекДанныеУслуги = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Обещание = ВопросАсинх("Вы уверены, что хотите обновить данные со скидкой?", РежимДиалогаВопрос.ДаНет);
	
	ОтветНаВопрос = Ждать Обещание;
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ЮК_ПересчитатьТаблицуСУчетомСкидки();	
	Иначе
		Сообщить ("Данные не обновились");
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЮК_ПересчитатьТаблицуСУчетомСкидки();
	// *****
	// Kuznetsov: Применение скидки
	Для Каждого ТекДанныеТовары Из Объект.Товары Цикл 
		РассчитатьСуммуСтроки(ТекДанныеТовары);
	КонецЦикла; 
	
	Для Каждого ТекДанныеУслуги Из Объект.Услуги Цикл 
		РассчитатьСуммуСтроки(ТекДанныеУслуги);
	КонецЦикла; 
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// *****
	// Kuznetsov: Изменение пересчета суммы после применения скидки
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * (ТекущиеДанные.Цена - ТекущиеДанные.Цена * Объект.ЮК_СогласованнаяСкидка/100);
	//КонцДоработки
		
	РассчитатьСуммуДокумента();
//	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
//	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
